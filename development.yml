# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- feature/*

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '6c1ef482-352c-46e9-8c12-069788b6e40a'

  # Web app name
  webAppName: 'jdpythonapp'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'jdpythonapp'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.7'

  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

  isStaging: $[eq(variables['Build.SourceBranch'], 'refs/heads/staging')]

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - script: |
        pip install pytest pytest-azurepipelines
        python -m pytest
      displayName: 'pytest'

    - script: |
        python mypy.py .

    - script: docker pull github/super-linter:latest
      displayName: Pull GitHub Super-Linter image
    - script: >-
        docker run \
          -e RUN_LOCAL=true \
          -v $(System.DefaultWorkingDirectory):/tmp/lint \
          github/super-linter
      displayName: 'Run GitHub Super-Linter'